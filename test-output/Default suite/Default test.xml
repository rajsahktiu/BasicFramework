<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Boo" failures="0" tests="4" name="Default test" time="2.102" errors="0" timestamp="2022-10-20T13:41:07 CST">
  <testcase classname="tests.LoginTest" name="@BeforeMethod beforeMethod" time="2.02">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;BOO&amp;apos;, ip: &amp;apos;172.16.1.139&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;15.0.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Process unexpectedly closed with status 0
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'BOO', ip: '172.16.1.139', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at pages.LoginPage.openBrowser(LoginPage.java:54)
at tests.LoginTest.beforeMethod(LoginTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.LoginTest" name="@AfterMethod afterMethod" time="-1.66629486747E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod beforeMethod" time="-1.666294867475E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.LoginTest" name="@AfterMethod afterMethod" time="-1.666294867484E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod beforeMethod" time="-1.666294867485E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.LoginTest" name="@AfterMethod afterMethod" time="-1.666294867491E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod beforeMethod" time="-1.666294867494E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="tests.LoginTest" name="@AfterMethod afterMethod" time="-1.6662948675E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="tests.LoginTest" name="loginWithSpecialXharEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithSpecialXharEmailTest -->
  <testcase classname="tests.LoginTest" name="loginWithEmptyEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithEmptyEmailTest -->
  <testcase classname="tests.LoginTest" name="loginWithEmptyPasswordTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithEmptyPasswordTest -->
  <testcase classname="tests.LoginTest" name="loginWithWrongEmailPasswordTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithWrongEmailPasswordTest -->
</testsuite> <!-- Default test -->
